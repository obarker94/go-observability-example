version: '3.8'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  server1:
    platform: linux/amd64
    build:
      context: ./example-servers/server-one
      dockerfile: Dockerfile
    container_name: server1
    depends_on:
      - otel-collector
    environment:
      - OTEL_ENDPOINT=otel-collector:4317
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - 8080:8080
    logging: *default-logging

  server2:
    platform: linux/amd64
    build:
      context: ./example-servers/server-two
      dockerfile: Dockerfile
    container_name: server2
    depends_on:
      - otel-collector
    environment:
      - OTEL_ENDPOINT=otel-collector:4317
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - 8081:8081
    logging: *default-logging

  server3:
    platform: linux/amd64
    build:
      context: ./example-servers/server-three
      dockerfile: Dockerfile
    container_name: server3
    depends_on:
      - otel-collector
    environment:
      - OTEL_ENDPOINT=otel-collector:4317
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - 8082:8082
    logging: *default-logging

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    logging: *default-logging

  promtail:
    image:  grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - ./promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    logging: *default-logging

  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    depends_on:
      - init

  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:latest
    command:
      - run
      - /template.js
    volumes:
      - ./template.js:/template.js:ro
    depends_on:
      - otel-collector
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector:0.86.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
